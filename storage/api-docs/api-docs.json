{
    "openapi": "3.0.0",
    "info": {
        "title": "ETGA API Listing",
        "description": "This is the List of APIs that should be used across ETGA and Tourguides ( Dashboard ETGA, Dashboard Tourguides, Website ETGA, Website Tourguides.me)",
        "contact": {
            "email": "nada@technologies.ae"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/items": {},
        "/api/register": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Register a new user",
                "operationId": "8a56853624e025573120a09a4c75d468",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "User login",
                "operationId": "a3b306d14572d1f4bd6c064b3233e7b8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User logged in successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get the authenticated user",
                "description": "Retrieves the details of the currently authenticated user. This endpoint requires a Bearer token in the Authorization header.",
                "operationId": "7c1cf647d76fad4b3eb1549fa4fe2f4c",
                "responses": {
                    "200": {
                        "description": "Authenticated user details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "John Doe"
                                        },
                                        "email": {
                                            "type": "string",
                                            "format": "email",
                                            "example": "john.doe@example.com"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/availabletimings": {
            "get": {
                "tags": [
                    "AvailableTimings"
                ],
                "summary": "Get list of available timings",
                "operationId": "getAvailableTimings",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AvailableTiming"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "AvailableTimings"
                ],
                "summary": "Create a new available timing",
                "operationId": "createAvailableTiming",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AvailableTiming"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Available timing created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AvailableTiming"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/availabletimings/{id}": {
            "get": {
                "tags": [
                    "AvailableTimings"
                ],
                "summary": "Get available timing by ID",
                "operationId": "getAvailableTimingById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AvailableTiming"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "put": {
                "tags": [
                    "AvailableTimings"
                ],
                "summary": "Update available timing",
                "operationId": "updateAvailableTiming",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AvailableTiming"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AvailableTiming"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "AvailableTimings"
                ],
                "summary": "Delete available timing",
                "operationId": "deleteAvailableTiming",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/api/tours": {
            "get": {
                "tags": [
                    "Tours"
                ],
                "summary": "Get list of tours",
                "description": "Returns list of tours",
                "operationId": "getToursList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer"
                                            },
                                            "title": {
                                                "type": "string"
                                            },
                                            "description": {
                                                "type": "string"
                                            },
                                            "price": {
                                                "type": "number",
                                                "format": "float"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Tours"
                ],
                "summary": "Create a new tour",
                "operationId": "ef2db0e37679eab7f028974f0f74f146",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "description",
                                    "price"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Guided City Tour"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "A comprehensive guided tour of the city."
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 99.99
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Tour created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Guided City Tour"
                                        },
                                        "description": {
                                            "type": "string",
                                            "example": "A comprehensive guided tour of the city."
                                        },
                                        "price": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 99.99
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/tours/{id}": {
            "get": {
                "tags": [
                    "Tours"
                ],
                "summary": "Get a specific tour",
                "description": "Returns a specific tour by its ID",
                "operationId": "getTour",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "title": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "price": {
                                            "type": "number",
                                            "format": "float"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tour not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Tours"
                ],
                "summary": "Update a specific tour",
                "operationId": "bf975477c6df737389facdc8f968d8dc",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "description",
                                    "price"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Updated Tour Title"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated description of the tour."
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 109.99
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Tour updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Updated Tour Title"
                                        },
                                        "description": {
                                            "type": "string",
                                            "example": "Updated description of the tour."
                                        },
                                        "price": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 109.99
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tour not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Tour not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Tours"
                ],
                "summary": "Delete a specific tour",
                "operationId": "c2f88616b1cb03ea7b6cb10e829a475c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Tour deleted successfully"
                    },
                    "404": {
                        "description": "Tour not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Tour not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/documents": {
            "get": {
                "tags": [
                    "Documents"
                ],
                "summary": "List all documents",
                "operationId": "479e53af7d4820aecb8f9534fdbe21aa",
                "responses": {
                    "200": {
                        "description": "A list of documents",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Document"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Documents"
                ],
                "summary": "Create a new document",
                "operationId": "9b247d60e8834d470666fba8e773edb4",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Document"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Document created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Document"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/documents/{id}": {
            "get": {
                "tags": [
                    "Documents"
                ],
                "summary": "Get a single document by ID",
                "operationId": "0fa5befcdb9042b346d01baea49dee95",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the document",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of a single document",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Document"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Document not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Documents"
                ],
                "summary": "Update an existing document",
                "operationId": "b851458865e322163fe9b88595919255",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the document",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Document"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Document updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Document"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Document not found"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Documents"
                ],
                "summary": "Delete a document",
                "operationId": "889c107c27dc6b118dee932d1760f574",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the document",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Document deleted successfully"
                    },
                    "404": {
                        "description": "Document not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/documents/upload": {
            "post": {
                "tags": [
                    "Documents"
                ],
                "summary": "Upload a document",
                "operationId": "8e3a5d070f386f819b02061c0ef0adc1",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "file": {
                                        "description": "The file to upload",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "File uploaded successfully"
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/api/documents/list": {
            "get": {
                "tags": [
                    "Documents"
                ],
                "summary": "List all uploaded files",
                "operationId": "1d32277c52f31b389ab70bc4b82e69bd",
                "responses": {
                    "200": {
                        "description": "A list of files",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "example": "documents/file1.pdf"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/tourguides": {
            "get": {
                "tags": [
                    "Tour Guides"
                ],
                "summary": "List all tour guides",
                "operationId": "02989406f6ac7e233d19d3efe379ee99",
                "responses": {
                    "200": {
                        "description": "A list of tour guides",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TourGuide"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Tour Guides"
                ],
                "summary": "Create a new tour guide. Note: ID will be generated Automatically",
                "operationId": "ac8a470db54b987e082016da95b6d3b1",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TourGuide"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Tour guide created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TourGuide"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/tourguides/{id}": {
            "get": {
                "tags": [
                    "Tour Guides"
                ],
                "summary": "Get a single tour guide by ID",
                "operationId": "cf6497b0743dfc53b6fda910714e8c14",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the tour guide",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of a single tour guide",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TourGuide"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tour guide not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Tour Guides"
                ],
                "summary": "Update an existing tour guide",
                "operationId": "03743e5a54ddad807818f7dd39c52ace",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the tour guide",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TourGuide"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Tour guide updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TourGuide"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tour guide not found"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Tour Guides"
                ],
                "summary": "Delete a tour guide",
                "operationId": "6f0a0ff3ec7da60231700c1c7f5ce416",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the tour guide",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Tour guide deleted successfully"
                    },
                    "404": {
                        "description": "Tour guide not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/tourguides/{id}/user": {
            "get": {
                "tags": [
                    "Tour Guides"
                ],
                "summary": "Get the user for a tour guide",
                "description": "Retrieve the user associated with the specified tour guide.",
                "operationId": "getTourGuideUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the tour guide",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User associated with the tour guide",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tour guide not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Tour guide not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get all users",
                "description": "Retrieve a list of all users.",
                "operationId": "getAllUsers",
                "responses": {
                    "200": {
                        "description": "A list of users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No users found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "No users found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user/{id}/tour-guides": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get all tour guides for a user",
                "description": "Retrieve all tour guides associated with the specified user.",
                "operationId": "getUserTourGuides",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of tour guides for the user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TourGuide"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AvailableTiming": {
                "title": "Available Timing",
                "required": [
                    "tour_guide_id",
                    "available_from",
                    "available_to"
                ],
                "properties": {
                    "id": {
                        "description": "ID of the available timing",
                        "type": "integer"
                    },
                    "tour_guide_id": {
                        "description": "ID of the tour guide",
                        "type": "integer"
                    },
                    "available_from": {
                        "description": "Start time of availability",
                        "type": "string",
                        "format": "date-time"
                    },
                    "available_to": {
                        "description": "End time of availability",
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Complaint": {
                "title": "Complaint",
                "required": [
                    "tour_booking_id",
                    "content"
                ],
                "properties": {
                    "id": {
                        "description": "ID of the complaint",
                        "type": "integer"
                    },
                    "tour_booking_id": {
                        "description": "ID of the associated tour booking",
                        "type": "integer"
                    },
                    "content": {
                        "description": "Content of the complaint",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Document": {
                "required": [
                    "type",
                    "file_path",
                    "user_id"
                ],
                "properties": {
                    "id": {
                        "description": "The unique identifier for the document",
                        "type": "integer",
                        "example": 1
                    },
                    "type": {
                        "description": "The type or category of the document",
                        "type": "string",
                        "example": "Invoice"
                    },
                    "file_path": {
                        "description": "The path where the document file is stored",
                        "type": "string",
                        "example": "/uploads/documents/invoice_123.pdf"
                    },
                    "user_id": {
                        "description": "The ID of the user who owns or uploaded the document",
                        "type": "integer",
                        "example": 123
                    }
                },
                "type": "object"
            },
            "Tour": {
                "title": "Tour",
                "required": [
                    "tour_guide_id",
                    "title",
                    "price"
                ],
                "properties": {
                    "id": {
                        "description": "ID of the tour",
                        "type": "integer"
                    },
                    "title": {
                        "description": "Title of the tour",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description of the tour",
                        "type": "string"
                    },
                    "price": {
                        "description": "Price of the tour",
                        "type": "number",
                        "format": "float"
                    }
                },
                "type": "object"
            },
            "TourGuide": {
                "required": [
                    "id",
                    "name",
                    "license_id",
                    "hourly_price",
                    "country",
                    "nationality",
                    "verified",
                    "approved",
                    "suspended"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "license_id": {
                        "type": "string",
                        "example": "ETGA12345"
                    },
                    "hourly_price": {
                        "type": "number",
                        "format": "float",
                        "example": 50.75
                    },
                    "country": {
                        "type": "string",
                        "example": "United Arab Emirates"
                    },
                    "nationality": {
                        "type": "string",
                        "example": "Egyptian"
                    },
                    "verified": {
                        "type": "boolean",
                        "example": true
                    },
                    "approved": {
                        "type": "boolean",
                        "example": true
                    },
                    "suspended": {
                        "type": "boolean",
                        "example": false
                    }
                },
                "type": "object"
            },
            "User": {
                "required": [
                    "id",
                    "name",
                    "email",
                    "password",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john.doe@example.com"
                    },
                    "password": {
                        "type": "string",
                        "example": "$2y$10$eW5LRH3dShPjGp9uWZKH3e..."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-09-01T12:34:56Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-09-01T12:34:56Z"
                    },
                    "email_verified_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-09-01T12:34:56Z"
                    },
                    "is_admin": {
                        "type": "boolean",
                        "example": false
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "JWT Authorization header using the Bearer scheme.",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Users",
            "description": "Users"
        },
        {
            "name": "AvailableTimings",
            "description": "AvailableTimings"
        },
        {
            "name": "Tours",
            "description": "Tours"
        },
        {
            "name": "Documents",
            "description": "Documents"
        },
        {
            "name": "Tour Guides",
            "description": "Tour Guides"
        }
    ]
}